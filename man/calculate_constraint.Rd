% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ego_metrics.R
\name{calculate_constraint}
\alias{calculate_constraint}
\title{Calculate Pairwise and Total Constraint for Ego Networks}
\usage{
calculate_constraint(adj_matrix, directed = TRUE)
}
\arguments{
\item{adj_matrix}{An adjacency matrix representing network ties}

\item{directed}{Logical, whether to treat the network as directed. Default is TRUE}
}
\value{
A tibble in long format containing ego, alter, and constraint values.
When alter = "total", the constraint value represents the total constraint for that ego.
}
\description{
This function calculates the constraint in ego networks using Burt's formula:
C_i = sum_j(p_ij + sum_q(p_iq*p_qj))^2
where p_ij = (a_ij + a_ji) / sum_k(a_ik + a_ki)
}
\details{
Constraint is higher if ego has fewer or more redundant contacts.
For isolated vertices (degree = 0), constraint is set to NA.
}
\examples{
# Create sample adjacency matrix
adj_mat <- matrix(c(0,1,1,0,1,0,0,1,1,0,0,1), nrow=4, byrow=TRUE)
rownames(adj_mat) <- colnames(adj_mat) <- paste0("N", 1:4)

# Calculate constraint
calculate_constraint(adj_mat)
}
