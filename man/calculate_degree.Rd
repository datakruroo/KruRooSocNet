% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ego_metrics.R
\name{calculate_degree}
\alias{calculate_degree}
\title{Calculate degree for each node in multiple network types}
\usage{
calculate_degree(network_list, directed = TRUE, mode = "out")
}
\arguments{
\item{network_list}{A list of adjacency matrices, each representing a different type of network}

\item{directed}{Logical, whether the networks are directed. Default is TRUE}

\item{mode}{Character, the type of degree to calculate: "in", "out", or "all". Default is "out"}
}
\value{
A data frame with nodes as rows and different network types as columns
}
\description{
Calculate degree for each node in multiple network types
}
\examples{
# Create sample adjacency matrices with different nodes
friendship <- matrix(c(0,1,1,0,0,0,1,0,1), nrow=3)
rownames(friendship) <- colnames(friendship) <- c("A", "B", "C")

advice <- matrix(c(0,1,0,0,0,0,1,0,1,0,0,0,0,1,0,0), nrow=4)
rownames(advice) <- colnames(advice) <- c("A", "B", "D", "E")

# Calculate outdegree for each network
networks <- list(friendship = friendship, advice = advice)
calculate_degree(networks)
}
